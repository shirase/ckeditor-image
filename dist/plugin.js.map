{"version":3,"sources":["plugin.js"],"names":["getSelectedImage","editor","element","getSelection","getSelectedElement","is","data","isReadOnly","getImageAlignment","align","getStyle","getAttribute","CKEDITOR","plugins","add","requires","lang","icons","hidpi","init","image2","dialog","this","path","allowed","isTabEnabled","addCommand","dialogCommand","allowedContent","requiredContent","contentTransformations","ui","addButton","label","common","image","command","toolbar","on","evt","addMenuItems","menu","group","contextMenu","addListener","TRISTATE_OFF","afterInit","setupAlignCommand","value","getCommand","img","removeStyle","removeAttribute","setStyle","cancel","setState","TRISTATE_ON","TRISTATE_DISABLED","config","image_removeLinkByEmptyURL"],"mappings":"CASA,WA0HC,QAASA,GAAkBC,EAAQC,GAClC,IAAMA,EAAU,CAEfA,EADUD,EAAOE,eACHC,qBAGf,GAAKF,GAAWA,EAAQG,GAAI,SAAYH,EAAQI,KAAM,qBAAwBJ,EAAQK,aACrF,MAAOL,GAGT,QAASM,GAAmBN,GAC3B,GAAIO,GAAQP,EAAQQ,SAAU,QAQ9B,OANc,WAATD,GAA+B,QAATA,IAC1BA,EAAQ,GAEHA,IACLA,EAAQP,EAAQS,aAAc,UAExBF,EA3IRG,SAASC,QAAQC,IAAK,SACrBC,SAAU,SAEVC,KAAM,2OAENC,MAAO,QACPC,OAAO,EACPC,KAAM,SAAUlB,GAGf,IAAKA,EAAOY,QAAQO,OAApB,CAMAR,SAASS,OAAOP,IAHC,QAGgBQ,KAAKC,KAAO,mBAE7C,IAAIC,GAAU,sHAGTZ,UAASS,OAAOI,aAAcxB,EARlB,QAQsC,cACtDuB,EAAU,kDAGXvB,EAAOyB,WAZU,QAYc,GAAId,UAASe,cAZ3B,SAahBC,eAAgBJ,EAChBK,gBARW,eASXC,yBACG,0BAA2B,gCAC3B,+BAAgC,wCAKpC7B,EAAO8B,GAAGC,WAAa/B,EAAO8B,GAAGC,UAAW,SAC3CC,MAAOhC,EAAOe,KAAKkB,OAAOC,MAC1BC,QAxBgB,QAyBhBC,QAAS,cAGVpC,EAAOqC,GAAI,cAAe,SAAUC,GACnC,GAAIrC,GAAUqC,EAAIjC,KAAKJ,SAElBA,EAAQG,GAAI,QAAYH,EAAQI,KAAM,oBAAwBJ,EAAQK,eAC1EgC,EAAIjC,KAAKe,OAAS,WAIfpB,EAAOuC,cACXvC,EAAOuC,cACNL,OACCF,MAAOhC,EAAOe,KAAKmB,MAAMM,KACzBL,QAAS,QACTM,MAAO,WAMLzC,EAAO0C,aACX1C,EAAO0C,YAAYC,YAAa,SAAU1C,GACzC,GAAKF,EAAkBC,EAAQC,GAC9B,OAASiC,MAAOvB,SAASiC,kBAI7BC,UAAW,SAAU7C,GAYpB,QAAS8C,GAAmBC,GAC3B,GAAIZ,GAAUnC,EAAOgD,WAAY,UAAYD,EACxCZ,KACU,QAATY,GAA4B,SAATA,GACvBZ,EAAQE,GAAI,OAAQ,SAAUC,GAC7B,GACC9B,GADGyC,EAAMlD,EAAkBC,EAEvBiD,KACJzC,EAAQD,EAAmB0C,GACtBzC,GAASuC,GACbE,EAAIC,YAAa,SAGZH,GAASxC,EAAmB0C,IAChCA,EAAIE,gBAAiB,UAEtBF,EAAIG,SAAU,QAASL,GAGxBT,EAAIe,YAKPlB,EAAQE,GAAI,UAAW,SAAUC,GAChC,GACC9B,GADGyC,EAAMlD,EAAkBC,EAEvBiD,KACJzC,EAAQD,EAAmB0C,GAE3B5B,KAAKiC,SACH9C,GAASuC,EAAUpC,SAAS4C,YAAyB,SAATR,GAA6B,QAATA,EAAoBpC,SAASiC,aAAejC,SAAS6C,mBAEvHlB,EAAIe,aA1CHrD,EAAOY,QAAQO,SAIpB2B,EAAmB,QACnBA,EAAmB,SACnBA,EAAmB,UACnBA,EAAmB,gBAqFtBnC,SAAS8C,OAAOC,4BAA6B","file":"plugin.js","sourcesContent":["/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n/**\n * @fileOverview The Image plugin.\n */\n\n( function() {\n\n\tCKEDITOR.plugins.add( 'image', {\n\t\trequires: 'dialog',\n\t\t// jscs:disable maximumLineLength\n\t\tlang: 'af,ar,az,bg,bn,bs,ca,cs,cy,da,de,de-ch,el,en,en-au,en-ca,en-gb,eo,es,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,id,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,oc,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,tt,ug,uk,vi,zh,zh-cn', // %REMOVE_LINE_CORE%\n\t\t// jscs:enable maximumLineLength\n\t\ticons: 'image', // %REMOVE_LINE_CORE%\n\t\thidpi: true, // %REMOVE_LINE_CORE%\n\t\tinit: function( editor ) {\n\t\t\t// Abort when Image2 is to be loaded since both plugins\n\t\t\t// share the same button, command, etc. names (#11222).\n\t\t\tif ( editor.plugins.image2 )\n\t\t\t\treturn;\n\n\t\t\tvar pluginName = 'image';\n\n\t\t\t// Register the dialog.\n\t\t\tCKEDITOR.dialog.add( pluginName, this.path + 'dialogs/image.js' );\n\n\t\t\tvar allowed = 'img[alt,!src]{border-style,border-width,float,height,margin,margin-bottom,margin-left,margin-right,margin-top,width}',\n\t\t\t\trequired = 'img[alt,src]';\n\n\t\t\tif ( CKEDITOR.dialog.isTabEnabled( editor, pluginName, 'advanced' ) )\n\t\t\t\tallowed = 'img[alt,dir,id,lang,longdesc,!src,title]{*}(*)';\n\n\t\t\t// Register the command.\n\t\t\teditor.addCommand( pluginName, new CKEDITOR.dialogCommand( pluginName, {\n\t\t\t\tallowedContent: allowed,\n\t\t\t\trequiredContent: required,\n\t\t\t\tcontentTransformations: [\n\t\t\t\t\t[ 'img{width}: sizeToStyle', 'img[width]: sizeToAttribute' ],\n\t\t\t\t\t[ 'img{float}: alignmentToStyle', 'img[align]: alignmentToAttribute' ]\n\t\t\t\t]\n\t\t\t} ) );\n\n\t\t\t// Register the toolbar button.\n\t\t\teditor.ui.addButton && editor.ui.addButton( 'Image', {\n\t\t\t\tlabel: editor.lang.common.image,\n\t\t\t\tcommand: pluginName,\n\t\t\t\ttoolbar: 'insert,10'\n\t\t\t} );\n\n\t\t\teditor.on( 'doubleclick', function( evt ) {\n\t\t\t\tvar element = evt.data.element;\n\n\t\t\t\tif ( element.is( 'img' ) && !element.data( 'cke-realelement' ) && !element.isReadOnly() )\n\t\t\t\t\tevt.data.dialog = 'image';\n\t\t\t} );\n\n\t\t\t// If the \"menu\" plugin is loaded, register the menu items.\n\t\t\tif ( editor.addMenuItems ) {\n\t\t\t\teditor.addMenuItems( {\n\t\t\t\t\timage: {\n\t\t\t\t\t\tlabel: editor.lang.image.menu,\n\t\t\t\t\t\tcommand: 'image',\n\t\t\t\t\t\tgroup: 'image'\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If the \"contextmenu\" plugin is loaded, register the listeners.\n\t\t\tif ( editor.contextMenu ) {\n\t\t\t\teditor.contextMenu.addListener( function( element ) {\n\t\t\t\t\tif ( getSelectedImage( editor, element ) )\n\t\t\t\t\t\treturn { image: CKEDITOR.TRISTATE_OFF };\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\tafterInit: function( editor ) {\n\t\t\t// Abort when Image2 is to be loaded since both plugins\n\t\t\t// share the same button, command, etc. names (#11222).\n\t\t\tif ( editor.plugins.image2 )\n\t\t\t\treturn;\n\n\t\t\t// Customize the behavior of the alignment commands. (#7430)\n\t\t\tsetupAlignCommand( 'left' );\n\t\t\tsetupAlignCommand( 'right' );\n\t\t\tsetupAlignCommand( 'center' );\n\t\t\tsetupAlignCommand( 'block' );\n\n\t\t\tfunction setupAlignCommand( value ) {\n\t\t\t\tvar command = editor.getCommand( 'justify' + value );\n\t\t\t\tif ( command ) {\n\t\t\t\t\tif ( value == 'left' || value == 'right' ) {\n\t\t\t\t\t\tcommand.on( 'exec', function( evt ) {\n\t\t\t\t\t\t\tvar img = getSelectedImage( editor ),\n\t\t\t\t\t\t\t\talign;\n\t\t\t\t\t\t\tif ( img ) {\n\t\t\t\t\t\t\t\talign = getImageAlignment( img );\n\t\t\t\t\t\t\t\tif ( align == value ) {\n\t\t\t\t\t\t\t\t\timg.removeStyle( 'float' );\n\n\t\t\t\t\t\t\t\t\t// Remove \"align\" attribute when necessary.\n\t\t\t\t\t\t\t\t\tif ( value == getImageAlignment( img ) )\n\t\t\t\t\t\t\t\t\t\timg.removeAttribute( 'align' );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\timg.setStyle( 'float', value );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tevt.cancel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tcommand.on( 'refresh', function( evt ) {\n\t\t\t\t\t\tvar img = getSelectedImage( editor ),\n\t\t\t\t\t\t\talign;\n\t\t\t\t\t\tif ( img ) {\n\t\t\t\t\t\t\talign = getImageAlignment( img );\n\n\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t( align == value ) ? CKEDITOR.TRISTATE_ON : ( value == 'right' || value == 'left' ) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED );\n\n\t\t\t\t\t\t\tevt.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\n\tfunction getSelectedImage( editor, element ) {\n\t\tif ( !element ) {\n\t\t\tvar sel = editor.getSelection();\n\t\t\telement = sel.getSelectedElement();\n\t\t}\n\n\t\tif ( element && element.is( 'img' ) && !element.data( 'cke-realelement' ) && !element.isReadOnly() )\n\t\t\treturn element;\n\t}\n\n\tfunction getImageAlignment( element ) {\n\t\tvar align = element.getStyle( 'float' );\n\n\t\tif ( align == 'inherit' || align == 'none' )\n\t\t\talign = 0;\n\n\t\tif ( !align )\n\t\t\talign = element.getAttribute( 'align' );\n\n\t\treturn align;\n\t}\n\n} )();\n\n/**\n * Determines whether dimension inputs should be automatically filled when the image URL changes in the Image plugin dialog window.\n *\n *\t\tconfig.image_prefillDimensions = false;\n *\n * @since 4.5\n * @cfg {Boolean} [image_prefillDimensions=true]\n * @member CKEDITOR.config\n */\n\n/**\n * Whether to remove links when emptying the link URL field in the Image dialog window.\n *\n *\t\tconfig.image_removeLinkByEmptyURL = false;\n *\n * @cfg {Boolean} [image_removeLinkByEmptyURL=true]\n * @member CKEDITOR.config\n */\nCKEDITOR.config.image_removeLinkByEmptyURL = true;\n\n/**\n * Padding text to set off the image in the preview area.\n *\n *\t\tconfig.image_previewText = CKEDITOR.tools.repeat( '___ ', 100 );\n *\n * @cfg {String} [image_previewText='Lorem ipsum dolor...' (placeholder text)]\n * @member CKEDITOR.config\n */\n"]}